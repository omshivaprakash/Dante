apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'


def archXVersion = '2.0.0'
def androidXVersion = '1.0.0'
def androidXCoreVersion = '1.0.2'
def androidXAppCompatVersion = '1.0.2'

def rxJavaVersion = "2.1.14"
def rxAndroidVersion = "2.1.0"
def rxBindingsVersion = "2.0.0"

def firebaseVersionCore = "16.0.8"
def firebaseVersionConfig = "16.5.0"
def firebaseVersionAuth = "16.2.1"

def playServicesVersionVision = "17.0.2"
def playServicesVersionDrive = "16.1.0"
def playServicesVersionAuth = "16.0.1"

def daggerVersion = "2.16"
def retrofitVersion = "2.5.0"
def shockUtilVersion = "5.0.1.3"
def crashlyticsVersion = "2.9.9"
def glideVersion = "4.9.0"
def lottieVersion = "3.0.1"
def rxImagePickerVersion = "2.2.0"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "at.shockbytes.dante"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 25
        versionName "3.6"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            // default
        }
        proguard_debug {
            // default
        }
    }
    buildTypes {
        release {
            useProguard true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        pre_release {
            initWith(release)
        }
        // Use this build type in order to avoid, that release build type will be signed with the release key
        proguard_debug {
            initWith(debug)
            useProguard true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            //applicationIdSuffix ".debug"
            debuggable true
        }
    }
    lintOptions {
        disable 'RestrictedApi'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        test {
            resources.srcDirs += ['src/test/resources']
        }
        androidTest {
            resources.srcDirs += ['src/androidTest/resources']
        }
    }
}

androidExtensions {
    experimental = true
}
kapt {
    arguments {
        arg("realm.ignoreKotlinNullability", true)
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXVersion"
    implementation "androidx.palette:palette:$androidXVersion"
    implementation "androidx.cardview:cardview:$androidXVersion"
    implementation "androidx.appcompat:appcompat:$androidXAppCompatVersion"
    implementation "androidx.core:core:$androidXCoreVersion"
    implementation "androidx.preference:preference:$androidXVersion"

    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.core:core-ktx:1.0.2'

    implementation "androidx.lifecycle:lifecycle-extensions:$archXVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$archXVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archXVersion"
    implementation "com.google.android.gms:play-services-vision:$playServicesVersionVision"
    implementation "com.google.android.gms:play-services-drive:$playServicesVersionDrive"
    implementation "com.google.android.gms:play-services-auth:$playServicesVersionAuth"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion@aar") {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:$firebaseVersionCore"
    implementation "com.google.firebase:firebase-config:$firebaseVersionConfig"
    implementation "com.google.firebase:firebase-auth:$firebaseVersionAuth"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "com.github.shockbytes:ShockUtil:$shockUtilVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.airbnb.android:lottie:$lottieVersion"

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    implementation 'com.tbuonomo:creative-viewpager:1.0.1'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'net.danlew:android.joda:2.10.1.2'
    implementation 'ru.bullyboo.view:circleseekbar:1.0.3'
    implementation "com.leinardi.android:speed-dial:2.0.1"
    implementation 'com.mlsdev.rximagepicker:library:2.1.5'
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.14.0'

    implementation "com.github.qingmei2:rximagepicker:$rxImagePickerVersion"
    implementation "com.github.qingmei2:rximagepicker_support:$rxImagePickerVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingsVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBindingsVersion"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.14.0'

    // Test libraries
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    androidTestImplementation 'androidx.test:core:1.2.0'
    // androidTestImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
}

apply plugin: 'com.google.gms.google-services'
